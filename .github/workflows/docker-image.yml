
on:
  push:
    branches: [ "master" ]

jobs:

  # Job to build and test React container
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3          
    
      # Build the client development container
      - name: Build React Test Container
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/react-test -f ./client/Dockerfile.dev ./client
      
      # Run npm test with CI=true so it exits
      - name: Run React Tests
        run: docker run -e CI=true ${{ secrets.DOCKERHUB_USERNAME }}/react-test npm test

  # Job to build and push production containers to Docker Hub
  dockerhub_build_and_push:
    runs-on: ubuntu-latest
    needs: build_and_test  # Depends on the successful completion of the "build_and_test" job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3   # Fetches the entire repository

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build production containers
      - name: Build Client Container
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/multi-client ./client
      
      - name: Build Nginx Container
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/multi-nginx ./nginx
      
      - name: Build Server Container
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/multi-server ./server
      
      - name: Build Worker Container
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/multi-worker ./worker

      # Push production containers to Docker Hub
      - name: Push Client Container
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi-client
      
      - name: Push Nginx Container
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi-nginx
      
      - name: Push Server Container
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi-server
      
      - name: Push Worker Container
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/multi-worker


      # - name: Generate deployment package
      #   run: zip -r deploy.zip . -x '*.git*'

      # - name: Deploy to EB
      #   uses: einaregilsson/beanstalk-deploy@v21
      #   with:
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     application_name: MyApplicationName
      #     environment_name: MyApplication-Environment
      #     version_label: 12345
      #     region: us-west-2
      #     deployment_package: deploy.zip


      # - name: Generate deployment package
      #   run: zip -r deploy.zip . -x '*.git*'

      # - name: Deploy to EB
      #   uses: einaregilsson/beanstalk-deploy@v18
      #   with:
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
      #     application_name: multi-gh
      #     environment_name: Multigh-env
      #     existing_bucket_name: elasticbeanstalk-us-east-1-923445559289
      #     region: us-east-1
      #     version_label: ${{ github.sha }}
      #     deployment_package: deploy.zip